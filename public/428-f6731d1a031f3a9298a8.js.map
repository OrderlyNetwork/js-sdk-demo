{"version":3,"file":"428-f6731d1a031f3a9298a8.js","mappings":"qKAiFA,UAlEkBA,MACCC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OAAOC,EAAAA,cAAA,WAAW,C","sources":["webpack://orderly-sdk-demo/./src/components/trade/main.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { TradeLayout } from '@/components/common/layout';\nimport { RightPanel } from '@/components/common/rightPanel';\nimport TradeBodyLayout from '@/components/common/tradeBodyLayout';\nimport { OrderBook } from '@/components/trade/orderbook';\nimport { TradeMarket } from '@/components/trade/tradeMarket';\nimport { OrdersGroupPanel } from '@/components/trade/orders';\nimport { MarketAndChartLayout } from '@/components/trade/marketAndChartLayout';\n\nimport { Dev } from '@/components/dev';\nimport { useSelector } from 'react-redux';\nimport { selectTradingType } from '@/redux/tradingSlice';\nimport { PositionGroupPanel } from '../futures/position';\nimport { PositionProvider } from '../futures/position/positionContext';\n\nconst TradeMain = () => {\n\tconst tradeType = useSelector(selectTradingType);\n\n\treturn <div></div>;\n\n\t// const body = useMemo(() => {\n\t// \treturn (\n\t// \t\t<TradeLayout\n\t// \t\t\tright={<RightPanel />}\n\t// \t\t\tcontent={\n\t// \t\t\t\t<TradeBodyLayout\n\t// \t\t\t\t\torderBookView={\n\t// \t\t\t\t\t\t<>\n\t// \t\t\t\t\t\t\t<OrderBook />\n\t// \t\t\t\t\t\t\t<TradeMarket />\n\t// \t\t\t\t\t\t</>\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\tordersView={\n\t// \t\t\t\t\t\ttradeType === 'SPOT' ? (\n\t// \t\t\t\t\t\t\t<OrdersGroupPanel />\n\t// \t\t\t\t\t\t) : (\n\t// \t\t\t\t\t\t\t<PositionProvider>\n\t// \t\t\t\t\t\t\t\t<PositionGroupPanel />\n\t// \t\t\t\t\t\t\t</PositionProvider>\n\t// \t\t\t\t\t\t)\n\t// \t\t\t\t\t}\n\t// \t\t\t\t>\n\t// \t\t\t\t\t<MarketAndChartLayout />\n\t// \t\t\t\t</TradeBodyLayout>\n\t// \t\t\t}\n\t// \t\t>\n\t// \t\t\t{/* <Dev /> */}\n\t// \t\t</TradeLayout>\n\t// \t);\n\t// }, [tradeType]);\n\n\t// return body;\n\n\t// if (tradeType === 'SPOT') {\n\t// \treturn body;\n\t// }\n\n\t// return <PositionProvider>{body}</PositionProvider>;\n\n\t// return (\n\t// \t<TradeLayout\n\t// \t\tright={<RightPanel />}\n\t// \t\tcontent={\n\t// \t\t\t<TradeBodyLayout\n\t// \t\t\t\torderBookView={\n\t// \t\t\t\t\t<>\n\t// \t\t\t\t\t\t<OrderBook />\n\t// \t\t\t\t\t\t<TradeMarket />\n\t// \t\t\t\t\t</>\n\t// \t\t\t\t}\n\t// \t\t\t\tordersView={<OrdersGroupPanel />}\n\t// \t\t\t>\n\t// \t\t\t\t<MarketAndChartLayout />\n\t// \t\t\t</TradeBodyLayout>\n\t// \t\t}\n\t// \t>\n\t// \t\t{/* <Dev /> */}\n\t// \t</TradeLayout>\n\t// );\n};\n\nexport default TradeMain;\n"],"names":["TradeMain","useSelector","selectTradingType","React"],"sourceRoot":""}