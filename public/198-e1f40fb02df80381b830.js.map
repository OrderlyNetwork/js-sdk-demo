{"version":3,"file":"198-e1f40fb02df80381b830.js","mappings":"0TAUO,MAAMA,EAAmBA,KAC/B,MAAM,EAACC,EAAO,EAACC,IAAaC,EAAAA,EAAAA,UAASC,EAAAA,EAAYC,KAC3CC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAqBF,EAAAA,EAAAA,IAAYG,EAAAA,IAChCC,GAAeC,UAAWC,KAChCC,EAAAA,EAAAA,OAEK,KAAEC,EAAI,WAAEC,EAAU,UAAEJ,IAAcK,EAAAA,EAAAA,IACvC,CAEChB,OAAQA,EACRiB,KAAM,IAEP,CAAEC,MAAOb,IAAeG,IAqBzB,OACCW,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAACC,EAAAA,EAAU,CACVpB,OAAQA,EACRqB,eAAgBpB,EAChBqB,UAAWjB,IAEZc,EAAAA,cAAA,OAAKI,UAAW,cACfJ,EAAAA,cAACK,EAAAA,EAAa,CACbC,WAAYX,QAAAA,EAAQ,GACpBH,UAAWI,EACXf,OAAQA,EACR0B,SA9BmBC,IACjBnB,GACLE,EAAY,CACXkB,SAAUD,EACVE,OAAQrB,aAAkB,EAAlBA,EAAoBqB,SAE3BC,MAAMC,IACN,GAAIA,EAAIC,MACP,MAAM,IAAIC,MAAMF,EAAIC,OAEpBE,EAAAA,GAAMC,QAAQ,CAAEC,QAAS,uBAAwBC,MAAO,SACzD,IAEAC,OAAOC,IACPL,EAAAA,GAAMF,MAAM,CAAEI,QAASG,EAAIC,QAASH,MAAO,SAAU,GACpD,KAkBA,E,qCCoBL,MAhEkBI,KACjB,MAAMC,GAAYpC,EAAAA,EAAAA,IAAYqC,EAAAA,IAiC9B,OA/BaC,EAAAA,EAAAA,UAAQ,IAEnBzB,EAAAA,cAAC0B,EAAAA,EAAW,CACXC,MAAO3B,EAAAA,cAAC4B,EAAAA,EAAU,MAClBX,QACCjB,EAAAA,cAAC6B,EAAAA,EAAe,CACfC,cACC9B,EAAAA,cAAAA,EAAAA,SAAA,KACCA,EAAAA,cAAC+B,EAAAA,EAAS,MACV/B,EAAAA,cAACgC,EAAAA,EAAW,OAGdC,WACe,SAAdV,EACCvB,EAAAA,cAACpB,EAAgB,MAEjBoB,EAAAA,cAACkC,EAAAA,EAAgB,KAChBlC,EAAAA,cAACmC,EAAAA,EAAkB,QAKtBnC,EAAAA,cAACoC,EAAAA,EAAoB,UAOvB,CAACb,GAEO,C","sources":["webpack://orderly-sdk-demo/./src/components/trade/orders/index.tsx","webpack://orderly-sdk-demo/./src/components/trade/main.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { OrderStatus, OrdersTabs } from './tabs';\nimport { useSelector } from 'react-redux';\nimport { selectLoggedIn } from '@/redux/appSlice';\nimport { selectCurrentTradingPair } from '@/redux/tradingSlice';\nimport { OrderListview } from '@/components/trade/orders/listview';\nimport { useCancelOrderMutation, useGetOrdersQuery } from '@/redux/ordersApi';\nimport { Toast } from '@douyinfe/semi-ui';\n\nexport const OrdersGroupPanel = () => {\n\tconst [status, setStatus] = useState(OrderStatus.NEW);\n\tconst isLoggedIn = useSelector(selectLoggedIn);\n\tconst currentTradingPair = useSelector(selectCurrentTradingPair);\n\tconst [cancelOrder, { isLoading: isCancelOrdering }] =\n\t\tuseCancelOrderMutation();\n\n\tconst { data, isFetching, isLoading } = useGetOrdersQuery(\n\t\t{\n\t\t\t// symbol: currentTradingPair?.symbol,\n\t\t\tstatus: status,\n\t\t\tsize: 10,\n\t\t},\n\t\t{ skip: !isLoggedIn || !currentTradingPair },\n\t);\n\n\tconst onOrderCancel = (orderId: string) => {\n\t\tif (!currentTradingPair) return;\n\t\tcancelOrder({\n\t\t\torder_id: orderId,\n\t\t\tsymbol: currentTradingPair?.symbol,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (res.error) {\n\t\t\t\t\tthrow new Error(res.error);\n\t\t\t\t} else {\n\t\t\t\t\tToast.success({ content: 'Cancel Order Success', theme: 'light' });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tToast.error({ content: err.message, theme: 'light' });\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<OrdersTabs\n\t\t\t\tstatus={status}\n\t\t\t\tonStatusChange={setStatus}\n\t\t\t\tdisabled={!isLoggedIn}\n\t\t\t/>\n\t\t\t<div className={'order-list'}>\n\t\t\t\t<OrderListview\n\t\t\t\t\tdataSource={data ?? []}\n\t\t\t\t\tisLoading={isFetching}\n\t\t\t\t\tstatus={status}\n\t\t\t\t\tonCancel={onOrderCancel}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { useMemo } from 'react';\nimport { TradeLayout } from '@/components/common/layout';\nimport { RightPanel } from '@/components/common/rightPanel';\nimport TradeBodyLayout from '@/components/common/tradeBodyLayout';\nimport { OrderBook } from '@/components/trade/orderbook';\nimport { TradeMarket } from '@/components/trade/tradeMarket';\nimport { OrdersGroupPanel } from '@/components/trade/orders';\nimport { MarketAndChartLayout } from '@/components/trade/marketAndChartLayout';\n\nimport { Dev } from '@/components/dev';\nimport { useSelector } from 'react-redux';\nimport { selectTradingType } from '@/redux/tradingSlice';\nimport { PositionGroupPanel } from '../futures/position';\nimport { PositionProvider } from '../futures/position/positionContext';\n\nconst TradeMain = () => {\n\tconst tradeType = useSelector(selectTradingType);\n\n\tconst body = useMemo(() => {\n\t\treturn (\n\t\t\t<TradeLayout\n\t\t\t\tright={<RightPanel />}\n\t\t\t\tcontent={\n\t\t\t\t\t<TradeBodyLayout\n\t\t\t\t\t\torderBookView={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<OrderBook />\n\t\t\t\t\t\t\t\t<TradeMarket />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tordersView={\n\t\t\t\t\t\t\ttradeType === 'SPOT' ? (\n\t\t\t\t\t\t\t\t<OrdersGroupPanel />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<PositionProvider>\n\t\t\t\t\t\t\t\t\t<PositionGroupPanel />\n\t\t\t\t\t\t\t\t</PositionProvider>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MarketAndChartLayout />\n\t\t\t\t\t</TradeBodyLayout>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{/* <Dev /> */}\n\t\t\t</TradeLayout>\n\t\t);\n\t}, [tradeType]);\n\n\treturn body;\n\n\t// if (tradeType === 'SPOT') {\n\t// \treturn body;\n\t// }\n\n\t// return <PositionProvider>{body}</PositionProvider>;\n\n\t// return (\n\t// \t<TradeLayout\n\t// \t\tright={<RightPanel />}\n\t// \t\tcontent={\n\t// \t\t\t<TradeBodyLayout\n\t// \t\t\t\torderBookView={\n\t// \t\t\t\t\t<>\n\t// \t\t\t\t\t\t<OrderBook />\n\t// \t\t\t\t\t\t<TradeMarket />\n\t// \t\t\t\t\t</>\n\t// \t\t\t\t}\n\t// \t\t\t\tordersView={<OrdersGroupPanel />}\n\t// \t\t\t>\n\t// \t\t\t\t<MarketAndChartLayout />\n\t// \t\t\t</TradeBodyLayout>\n\t// \t\t}\n\t// \t>\n\t// \t\t{/* <Dev /> */}\n\t// \t</TradeLayout>\n\t// );\n};\n\nexport default TradeMain;\n"],"names":["OrdersGroupPanel","status","setStatus","useState","OrderStatus","NEW","isLoggedIn","useSelector","selectLoggedIn","currentTradingPair","selectCurrentTradingPair","cancelOrder","isLoading","isCancelOrdering","useCancelOrderMutation","data","isFetching","useGetOrdersQuery","size","skip","React","OrdersTabs","onStatusChange","disabled","className","OrderListview","dataSource","onCancel","orderId","order_id","symbol","then","res","error","Error","Toast","success","content","theme","catch","err","message","TradeMain","tradeType","selectTradingType","useMemo","TradeLayout","right","RightPanel","TradeBodyLayout","orderBookView","OrderBook","TradeMarket","ordersView","PositionProvider","PositionGroupPanel","MarketAndChartLayout"],"sourceRoot":""}